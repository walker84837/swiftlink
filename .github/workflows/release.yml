name: Release on Tag

permissions: write

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  build-and-release:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            rust_target: x86_64-unknown-linux-gnu
          - os: macos-latest
            rust_target: x86_64-apple-darwin
          - os: windows-latest
            rust_target: x86_64-pc-windows-msvc

    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Install dependencies (Linux only)
        if: runner.os == 'Linux'
        run: sudo apt-get update && sudo apt-get install -y pkg-config libssl-dev

      - name: Build (release)
        run: cargo build --release --target ${{ matrix.rust_target }}

      - name: Determine release binary path
        id: binpath
        run: |
          if [[ "${{ matrix.os }}" == "windows-latest" ]]; then
            echo "path=target/${{ matrix.rust_target }}/release/swiftlink.exe" >> $GITHUB_OUTPUT
          else
            echo "path=target/${{ matrix.rust_target }}/release/swiftlink" >> $GITHUB_OUTPUT
          fi
        shell: bash

      - name: Create GitHub Release
        id: create_release
        uses: softprops/action-gh-release@v2
        if: github.ref_type == 'tag'
        with:
          draft: true
          preserve_order: false
          files: ${{ steps.binpath.outputs.path }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
