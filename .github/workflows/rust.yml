name: CI Build

on:
  push:
    branches: ["**"]
  pull_request:
    branches: ["**"]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            rust_target: x86_64-unknown-linux-gnu
          - os: macos-latest
            rust_target: x86_64-apple-darwin
          - os: windows-latest
            rust_target: x86_64-pc-windows-msvc

    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: password
          POSTGRES_DB: swiftlink_db
        ports:
          - 5432:5432
        options: >-
          --health-cmd "pg_isready -U postgres"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Wait for Postgres
        run: |
          for i in {1..15}; do
            pg_isready -h localhost -U postgres && break
            sleep 2
          done
        env:
          PGPASSWORD: password

      - name: Set up Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Install dependencies (Linux only)
        if: runner.os == 'Linux'
        run: sudo apt-get update && sudo apt-get install -y pkg-config libssl-dev

      - name: Set DATABASE_URL
        run: echo "DATABASE_URL=postgres://postgres:password@localhost:5432/swiftlink_db" >> $GITHUB_ENV

      - name: Build (debug)
        run: cargo build --target ${{ matrix.rust_target }}

      - name: Build (release)
        run: cargo build --release --target ${{ matrix.rust_target }}

      - name: Determine release binary path
        id: binpath
        run: |
          case "${{ matrix.os }}" in
            "windows-latest")
              echo "path=target/${{ matrix.rust_target }}/release/swiftlink.exe" >> $GITHUB_OUTPUT
              ;;
            *)
              echo "path=target/${{ matrix.rust_target }}/release/swiftlink" >> $GITHUB_OUTPUT
              ;;
          esac
        shell: bash

      - name: Upload release artifact
        uses: actions/upload-artifact@v4
        with:
          name: swiftlink-${{ matrix.os }}
          path: ${{ steps.binpath.outputs.path }}
          retention-days: 1
